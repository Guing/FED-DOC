"use strict";(self.webpackChunkfed_doc=self.webpackChunkfed_doc||[]).push([[7127],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return m}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,s=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=c(t),m=o,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||s;return t?r.createElement(f,a(a({ref:n},l),{},{components:t})):r.createElement(f,a({ref:n},l))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=t.length,a=new Array(s);a[0]=d;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var c=2;c<s;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},15017:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return u}});var r=t(87462),o=t(63366),s=(t(67294),t(3905)),a=["components"],i={},p=void 0,c={unversionedId:"TypeScript/Typescript\u9879\u76ee\u5b9e\u6218/\u540e\u7aef\u767b\u5f55\u529f\u80fd\u4f7f\u7528\u88c5\u9970\u5668\u4e0e\u53cd\u5c04\u4f18\u5316\u5b9e\u4f8b",id:"TypeScript/Typescript\u9879\u76ee\u5b9e\u6218/\u540e\u7aef\u767b\u5f55\u529f\u80fd\u4f7f\u7528\u88c5\u9970\u5668\u4e0e\u53cd\u5c04\u4f18\u5316\u5b9e\u4f8b",title:"\u540e\u7aef\u767b\u5f55\u529f\u80fd\u4f7f\u7528\u88c5\u9970\u5668\u4e0e\u53cd\u5c04\u4f18\u5316\u5b9e\u4f8b",description:"",source:"@site/docs/8-TypeScript/Typescript\u9879\u76ee\u5b9e\u6218/\u540e\u7aef\u767b\u5f55\u529f\u80fd\u4f7f\u7528\u88c5\u9970\u5668\u4e0e\u53cd\u5c04\u4f18\u5316\u5b9e\u4f8b.md",sourceDirName:"8-TypeScript/Typescript\u9879\u76ee\u5b9e\u6218",slug:"/TypeScript/Typescript\u9879\u76ee\u5b9e\u6218/\u540e\u7aef\u767b\u5f55\u529f\u80fd\u4f7f\u7528\u88c5\u9970\u5668\u4e0e\u53cd\u5c04\u4f18\u5316\u5b9e\u4f8b",permalink:"/FED-DOC/docs/TypeScript/Typescript\u9879\u76ee\u5b9e\u6218/\u540e\u7aef\u767b\u5f55\u529f\u80fd\u4f7f\u7528\u88c5\u9970\u5668\u4e0e\u53cd\u5c04\u4f18\u5316\u5b9e\u4f8b",editUrl:"https://github.com/Guing/FED-DOC/docs/8-TypeScript/Typescript\u9879\u76ee\u5b9e\u6218/\u540e\u7aef\u767b\u5f55\u529f\u80fd\u4f7f\u7528\u88c5\u9970\u5668\u4e0e\u53cd\u5c04\u4f18\u5316\u5b9e\u4f8b.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Typescript\u5165\u95e8\u5b66\u4e60\u7b14\u8bb0",permalink:"/FED-DOC/docs/TypeScript/Typescript\u5165\u95e8\u5b66\u4e60\u7b14\u8bb0/"},next:{title:"\u540e\u7aef\u767b\u5f55\u529f\u80fd\u5b9e\u4f8b",permalink:"/FED-DOC/docs/TypeScript/Typescript\u9879\u76ee\u5b9e\u6218/\u540e\u7aef\u767b\u5f55\u529f\u80fd\u5b9e\u4f8b"}},l={},u=[],d={toc:u};function m(e){var n=e.components,t=(0,o.Z)(e,a);return(0,s.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"//tsconfig.json\n    \"experimentalDecorators\": true,                \n    \"emitDecoratorMetadata\": true,  \n\n npm install reflect-metadata -S\n\n\n\n\n\n//  controller/LoginController.ts\n\nimport Express, { Router, Request, Response, NextFunction } from 'express'\nimport { getResponseData, checkLogin } from '../utils/index'\n\ninterface RequestWithBody extends Request {\n    body: {\n        [key: string]: string | undefined\n    }\n}\n\nconst homePageHtml = `\n<html>\n<body>\n <a  href=\"/showData\" >\u5c55\u793a\u6570\u636e</a>\n <a  href=\"/logout\" >\u9000\u51fa\u767b\u5f55</a>\n</body>\n</html>\n`\nconst loginPageHtml = `\n<html>\n<body>\n  <form method=\"post\" action=\"/login\">\n    <input type=\"password\" name=\"password\" />\n    <button>\u767b\u9646</button>\n  </form>\n</body>\n</html>\n`\n\nexport class LoginController {\n\n\n    home(req: Request, res: Response, next: NextFunction) {\n\n        if (req.session?.isLogin) {\n            res.send(homePageHtml);\n        } else {\n            res.send(loginPageHtml);\n        }\n\n    }\n\n    login(req: RequestWithBody, res: Response) {\n        if (req.session?.isLogin) {\n            res.json(getResponseData(false, '\u5df2\u7ecf\u767b\u5f55\u8fc7'))\n        } else {\n            if (req.body?.password === '123456' && req.session) {\n                req.session.isLogin = true;\n                res.json(getResponseData(true))\n            } else {\n                res.json(getResponseData(false, '\u767b\u5f55\u5931\u8d25'));\n            }\n        }\n    }\n\n    logout(req: Request, res: Response) {\n\n        if (req.session) {\n            req.session.isLogin = undefined;\n        }\n        res.json(getResponseData(true));\n    }\n}\n\n\n//contorller/DataController.ts\n\nimport { Request, Response } from 'express'\nimport { getResponseData, checkLogin } from '../utils/index'\nimport { get, use, controller } from '../decorator/'\nimport * as Data from '../utils/data.json'\n\n@controller('/')\nexport class DataController {\n\n    @get('/showData')\n    @use(checkLogin)\n    router(req: Request, res: Response) {\n\n        res.json(getResponseData(Data))\n\n    }\n}\n\n\n\n\n\n\n\n\n//decorator\u76ee\u5f55\uff1a\n\ncontroller  \u5bf9\u63a7\u5236\u5668\u5b9a\u4e49\u7684\u8def\u7531\u7edf\u4e00\u6536\u96c6\uff0c\u7136\u540e\u7edf\u4e00\u5b9a\u4e49\u8def\u7531\n\nimport router from '../router';\nimport  { RequestHandler } from 'express'\nimport { Methods } from './request'\n\nexport function controller(root: string) {\n    return function <T extends { new(...args: any[]): any }>(construct: T) {\n        for (let key in construct.prototype) {\n            let pathStr: string = Reflect.getMetadata('path', construct.prototype, key)\n            let method: Methods = Reflect.getMetadata('method', construct.prototype, key);\n            let middlewares:RequestHandler[] = Reflect.getMetadata('middlewares', construct.prototype, key) || [];\n            if (root) {\n                pathStr = root == '/' ? pathStr : root + pathStr\n            }\n            \n            if (pathStr && method) {\n                router[method](pathStr, ...middlewares, construct.prototype[key]);\n            }\n        }\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\nuse     \u5bf9\u5904\u7406\u65b9\u6cd5\uff0c\u4f7f\u7528\u4e2d\u95f4\u4ef6\n\nimport {  RequestHandler} from 'express'\nexport function use(middleware: RequestHandler) {\n    return function (target: any, key: string, dec: PropertyDescriptor) {\n        let middlewares = Reflect.getMetadata('middlewares', target, key) || [];\n        middlewares.push(middleware);\n        Reflect.defineMetadata('middlewares', middlewares, target, key);\n    }\n}\n\n\n\n\n\n\nrequest \u83b7\u53d6\u5904\u7406\u65b9\u6cd5\u4e0a\u7684\u5b9a\u4e49\u7684\u8bf7\u6c42\u65b9\u5f0f\uff0c\u8bf7\u6c42\u8def\u7531\n\nimport 'reflect-metadata'\n\n export enum Methods {\n    GET = 'get',\n    POST = 'post'\n}\n\nfunction requestMethods(methods:Methods) {\n    return function (path: string) {\n\n        return function (target: any, key: string, dec: PropertyDescriptor) {\n            Reflect.defineMetadata('path', path, target, key);\n            Reflect.defineMetadata('method', methods, target, key);\n        }\n    }\n}\n\nexport const get = requestMethods(Methods.GET)\nexport const post = requestMethods(Methods.POST)\n\n\n\n//router.ts\n\nimport { Router } from 'express';\n\nexport default Router();\n\n\n//index.ts \n\u5f15\u5165\u8def\u7531\uff0c\u6dfb\u52a0\u63a7\u5236\u5668\n\nimport express, { } from 'express';\nimport bodyParser from 'body-parser'\nimport cookieSession from 'cookie-session'\nimport './controller/LoginController'\nimport './controller/DataController'\nimport router from './router'\n\nconst app = express();\n\napp.use(bodyParser.urlencoded({ extended: false }));\n\napp.use(cookieSession({\n    name: 'session',\n    keys: ['typescript-api'],\n    maxAge: 24 * 60 * 60 * 10000\n}))\napp.use(router);\napp.listen(8000, () => {\n    console.log(\"server success!\");\n})\n")))}m.isMDXComponent=!0}}]);